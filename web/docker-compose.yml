version: '3.9'

services:
  ddns:
    container_name: web_cloudflare_ddns
    image: oznu/cloudflare-ddns:latest
    environment:
      - API_KEY=${CLOUDFLARE_API_KEY}
      - ZONE=${DOMAIN}
      - SUBDOMAIN=${SUBDOMAIN}
      - PROXIED=false
    networks:
      - backend
    restart: unless-stopped

  adguard:
    container_name: web_adguard
    image: adguard/adguardhome:latest
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 8081:80
    volumes:
      - ${ROOT_DIRECTORY}/adguard/data:/opt/adguardhome/work
      - ${ROOT_DIRECTORY}/adguard/config:/opt/adguardhome/conf
    labels:
      - traefik.enable=true
      - traefik.docker.network=frontend
      - traefik.tcp.services.adguard.loadbalancer.server.port=853
      - traefik.tcp.routers.adguard.rule=HostSNI(`${ADGUARD_DNS_HOST}`)
      - traefik.tcp.routers.adguard.tls.certresolver=default
      - traefik.tcp.routers.adguard.entrypoints=adguard
    networks:
      - frontend
      - backend
    restart: unless-stopped

  wireguard:
    container_name: web_wireguard
    image: ghcr.io/linuxserver/wireguard:latest
    volumes:
      - ${ROOT_DIRECTORY}/wireguard/config:/config
      - ${ROOT_DIRECTORY}/wireguard/modules:/lib/modules
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - SERVERURL=${WIREGUARD_HOST}
      - SERVERPORT=51820
      - PEERS=1
      - PEERDNS=auto
      - ALLOWEDIPS=0.0.0.0/0
    labels:
      - traefik.enable=true
      - traefik.docker.network=frontend
      - traefik.udp.services.wireguard.loadbalancer.server.port=51820
      - traefik.udp.routers.wireguard.entrypoints=wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      - frontend
      - backend
    restart: unless-stopped

  traefik:
    container_name: web_traefik
    image: traefik:2.4
    ports:
      - 80:80
      - 443:443
      - 8080:8080
      - 853:853/tcp
      - 51820:51820/udp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${ROOT_DIRECTORY}/traefik/traefik.toml:/etc/traefik/traefik.toml
      - ${ROOT_DIRECTORY}/traefik/conf.d:/etc/traefik/conf.d
      - ${ROOT_DIRECTORY}/traefik/letsencrypt:/letsencrypt
      - ${ROOT_DIRECTORY}/traefik/certs:/certs
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_API_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
    networks:
      - frontend
      - backend
    restart: unless-stopped

networks:
  frontend:
    external: true
  backend: