version: '3.9'

services:
  ddns:
    container_name: web_cloudflare_ddns
    image: oznu/cloudflare-ddns:latest
    environment:
      - API_KEY=${CLOUDFLARE_DNS_API_KEY}
      - ZONE=${DOMAIN}
      - SUBDOMAIN=${SUBDOMAIN}
      - PROXIED=false
    networks:
      - backend
    restart: unless-stopped

  adguard:
    container_name: web_adguard
    image: adguard/adguardhome:latest
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 853:853/tcp # Required for DNS-over-TLS
      - 8082:80
    volumes:
      - ${ROOT_DIRECTORY}/adguard/data:/opt/adguardhome/work
      - ${ROOT_DIRECTORY}/adguard/config:/opt/adguardhome/conf
      - ${ROOT_DIRECTORY}/traefik/letsencrypt/ssl:/ssl # Required for DNS-over-TLS
    networks:
      - frontend
      - backend
    restart: unless-stopped

  wireguard:
    container_name: web_wireguard
    image: ghcr.io/linuxserver/wireguard:latest
    ports:
      - 51820:51820/udp
    volumes:
      - ${ROOT_DIRECTORY}/wireguard/config:/config
      - ${ROOT_DIRECTORY}/wireguard/modules:/lib/modules
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - SERVERURL=${WIREGUARD_HOST}
      - SERVERPORT=51820
      - PEERS=1
      - PEERDNS=auto
      - ALLOWEDIPS=0.0.0.0/0
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      - frontend
      - backend
    restart: unless-stopped

  traefik:
    container_name: web_traefik
    image: traefik:2.4.13
    dns:
      - 1.1.1.1
      - 8.8.8.8
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${ROOT_DIRECTORY}/traefik/traefik.toml:/etc/traefik/traefik.toml
      - ${ROOT_DIRECTORY}/traefik/conf.d:/etc/traefik/conf.d
      - ${ROOT_DIRECTORY}/traefik/letsencrypt:/letsencrypt
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_API_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_GLOBAL_API_KEY}
    networks:
      - frontend
      - backend
    restart: unless-stopped

  traefik-certs-dumper:
    container_name: web_traefik_certs_dumper
    image: ldez/traefik-certs-dumper:v2.7.4
    entrypoint: sh -c '
      apk add jq;
      while ! [ -e /data/acme.json ]
      || ! [ `jq ".[] | .Certificates | length" /data/acme.json` != 0 ]; do
      sleep 60;
      done
      && traefik-certs-dumper file --version v2 --watch
      --source /data/acme.json --dest /data/ssl'
    volumes:
      - ${ROOT_DIRECTORY}/traefik/letsencrypt:/data
    restart: unless-stopped

networks:
  frontend:
    external: true
  backend: